name: build

on:
  push:
    paths-ignore:
      - "**.md"
      - ".gitignore"

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          path: lcfetch
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt update -q
          sudo apt install -y -q build-essential libreadline-dev lua5.3 liblua5.3-dev libx11-dev

      - name: Link Lua libraries
        run: |
          sudo mkdir -p /usr/lib/x86_64-linux-gnu/lib/
          sudo ln -s /usr/lib/x86_64-linux-gnu/liblua5.3.so /usr/lib/x86_64-linux-gnu/lib/liblua.so

      - name: Build lcfetch
        run: |
          cd ./lcfetch
          make CFLAGS="-I/usr/include/lua5.3 -O2 -Wall -Wextra -llua5.3 -lX11"

      - name: Upload produced binary
        uses: actions/upload-artifact@v2
        with:
          name: lcfetch-x86_64
          path: ./lcfetch/bin/lcfetch
          if-no-files-found: error

  release:
    name: Release to GitHub
    # if: contains(github.event.head_commit.message, 'release:') && github.repository == 'NTBBloodbath/lcfetch'
    needs: [linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          path: "workspace"
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          name: lcfetch-x86_64

      - name: Compress
        run: |
          ls -lh . lcfetch
          mv lcfetch-x86_64 lcfetch && tar caf lcfetch-x86_64.tar.xz lcfetch && rm lcfetch
          ls -lh

      - name: Setup Release information
        run: |
          versionName=`sed '8q;d' ./workspace/include/lcfetch.h | cut -d "\"" -f2 | xargs`
          export VERSION_NAME=$versionName
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          changelog_file: ./workspace/CHANGELOG.md

      - name: Create Release
        uses: Xotl/cool-github-releases@v1
        with:
          mode: update
          isDraft: false
          isPrerelease: false
          tag_name: v${{ env.VERSION_NAME }}
          release_name: v${{ env.VERSION_NAME }}
          assets: lcfetch-x86_64.tar.xz
          body_mrkdwn: ${{ steps.extract-release-notes.outputs.release_notes }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
